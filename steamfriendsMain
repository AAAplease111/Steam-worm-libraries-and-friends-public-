import aiohttp
import asyncio
import orjson as json
import datetime
start = datetime.datetime.now()

#优化了读写以及加入计时器

# Key及初始用户
key=input()
steamid=[]
origin=input()
steamid.append(origin)
i=0

# 接收请求
async def fetch(session, url):
    async with session.get(url) as response:
        return await response.text()

#执行操作
async def main(steamid, i):
    async with aiohttp.ClientSession() as session:
        while i < len(steamid) and i < 50:  # 限制一次跑的数量
            try:
                # 拼贴社交关系
                url='http://api.steampowered.com/ISteamUser/GetFriendList/v0001/?key='+key+'&steamid='+steamid[i]+'&relationship=friend'
                # 拼贴游戏库
                url2='http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key='+key+'&steamid='+steamid[i]+'&format=json'
                # 等待异步结果
                r = await fetch(session, url)
                rr = await fetch(session, url2)
                p= json.loads(r)
                pp= json.loads(rr)
                # 构造下一循环并去重
                friends = [friend['steamid'] for friend in p['friendslist']['friends']]
                steamid.extend(friends)  # 将新的朋友添加到 steamid 列表中
                steamid=list(set(steamid))
                # 社交关系储存
                filename=steamid[i]
                with open(r'A'+filename+'.json','w')as f:
                    f.write(r)
                # 游戏库储存
                with open(r'B'+filename+'.json','w')as f:
                    f.write(rr)
                # 移动到下一个 steamid
                i += 1  
            # 异常记录
            except Exception as e:
                print(f"Error processing steamid {steamid[i]}: {e}")
                with open('unprocessed_steamids.txt', 'a') as f:
                    f.write(str(e)+':'+steamid[i] + '\n')
                i+=1

# 构造循环
loop = asyncio.get_event_loop()
loop.run_until_complete(main([origin], 0))
# 将 steamid 列表写入到一个文件中
with open('steamids.txt', 'w') as f:
    for id in steamid:
        f.write(id + '\n')
end = datetime.datetime.now()
print(end-start)
